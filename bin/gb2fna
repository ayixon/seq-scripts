#!/usr/bin/env perl
# Created: 13 Dec 2017
# Author: Thomas Hackl, thackl@lim4.de
use warnings;
use strict;
use Getopt::Long  qw(:config no_ignore_case bundling);
use Data::Dumper;

GetOptions (
    "no-upper|U" => \(my $opt_noupper),
    "help|h!" => \(my $opt_help),
    "debug|D!" => \(my $debug),
) or die("Error in command line arguments\n");

if ($opt_help || @ARGV==0){
    print "Usage: gb-origin2fasta [options] .gb > .fa\n";
    printf " %-19s  %s\n", "-U/--no-upper", "Don't convert sequence to upper case, keep original case";
    printf " %-19s  %s\n", "-h/--help", "show this help";
    printf " %-19s  %s\n", "-D/--debug", "show debug messages";
    exit 0;
}

open(GB, $ARGV[0]) or die $!;
my $origin = 0;

my $id;
my $desc = " file={$ARGV[0]}";
my $seq = "";
while (<GB>) {
    if (/^LOCUS\s+(\S+)/){
        $id = $1 # overwrite by LOCUS ID
    }elsif (/^SOURCE\s+(.+)/){
        $desc.= " source={$1}";
    }elsif (/^ORIGIN/) {
        print ">", $id, $desc, "\n";
        while (<GB>) {
            chomp();
            last if m{^//}; # new record in multi-locus file
            s/^\s*\d+\s+//;
            $seq .= $_;
        }
        $seq =~ tr/ //d;
        $seq = uc($seq) unless $opt_noupper;

        my $seq_wrap = "";
        my $lw=80;
        $seq_wrap.= $_."\n" for unpack "(A$lw)*", $seq;
        chomp($seq_wrap);

        print $seq_wrap,"\n";

        $id = undef;
        $desc = " file={$ARGV[0]}";
        $seq = "";

        $origin++;
    }
}

$origin || print STDERR "Couldn't find ORIGIN sequence in $ARGV[0]\n";
